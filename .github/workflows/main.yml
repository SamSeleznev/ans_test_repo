name: CI/CD Pipeline

on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: |
          cd ./terraform
          terraform init

      - name: Terraform Apply
        id: terraform
        run: |
          cd ./terraform
          terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Save IP address as artifact
        uses: actions/upload-artifact@v2
        with:
          name: instance_ip
          path: terraform/instance_ip.txt
        
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
        
      - name: Load IP address from artifact
        uses: actions/download-artifact@v2
        with:
          name: instance_ip
          path: terraform/
        
      - name: Create inventory file
        run: |
          IP_ADDRESS=$(cat terraform/instance_ip.txt)
          echo "[PROD_SERVER_WEB]" > ./inventory.ini
          echo "$IP_ADDRESS ansible_user=ubuntu" >> ./inventory.ini               

      - name: Deploy containers to target machine
        env:
          ANSIBLE_HOST_KEY_CHECKING: False
        run: ansible-playbook -i ./inventory.ini ./deploy.yml -e "ansible_python_interpreter=/usr/bin/python3"
